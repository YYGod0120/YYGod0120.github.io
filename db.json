{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/busuanzi.min.js","path":"js/lib/busuanzi.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lozad.min.js","path":"js/lib/lozad.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/md5.min.js","path":"js/lib/md5.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lightbox/baguetteBox.min.css","path":"js/lib/lightbox/baguetteBox.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lightbox/baguetteBox.min.js","path":"js/lib/lightbox/baguetteBox.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-coy.min.css","path":"js/lib/prism/prism-coy.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-dark.min.css","path":"js/lib/prism/prism-dark.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-funky.min.css","path":"js/lib/prism/prism-funky.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-okaidia.min.css","path":"js/lib/prism/prism-okaidia.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-line-numbers.min.css","path":"js/lib/prism/prism-line-numbers.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-solarizedlight.min.css","path":"js/lib/prism/prism-solarizedlight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-tomorrow.min.css","path":"js/lib/prism/prism-tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-twilight.min.css","path":"js/lib/prism/prism-twilight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism.min.css","path":"js/lib/prism/prism.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1681219600357},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1681219599203},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1681219600634},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1681219600354},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1681219600636},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1681219600635},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1681219600637},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1681219600291},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1681219600358},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1681219600639},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1681219600638},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1681219599213},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1681219600641},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1681219600640},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1681219600641},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1681219600639},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1681219600642},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1681219600643},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1681219599464},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1681219600642},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1681219599461},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1681219599469},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1681219599473},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1681219599472},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1681219599476},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1681219600289},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1681219599470},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1681219599466},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1681219599457},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1681219599458},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1681219599467},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1681219599465},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1681219599462},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1681219599459},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1681219599468},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1681219599469},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1681219599460},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1681219599471},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1681219599474},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1681219599463},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1681219599476},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1681219599473},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1681219600431},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1681219599475},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1681219599482},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1681219599483},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1681219600432},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1681219600440},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1681219600412},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1681219599685},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1681219599463},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1681219600430},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1681219600412},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1681219599454},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1681219599464},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1681219599472},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1681219599466},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1681219600349},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1681219599475},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1681219599477},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1681219600433},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1681219600434},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1681219600435},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1681219600434},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1681219600437},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1681219600437},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1681219600438},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1681219600440},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1681219600439},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1681219600439},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1681219600436},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1681219600438},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1681219600410},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1681219599482},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1681219600352},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1681219600350},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1681219600632},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1681219600411},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1681219599217},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1681219600295},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1681219600298},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1681219600297},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1681219599218},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1681219600503},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1681219600501},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1681219600286},{"_id":"themes/hexo-theme-Kaze/.deepsource.toml","hash":"d562cc92fdbdcf5ef6494d9d589c1d458be9447b","modified":1681220206844},{"_id":"themes/hexo-theme-Kaze/.eslintrc.json","hash":"5826fc1d26f8e1327d6ce733c1dcfdd363e455d3","modified":1681220206844},{"_id":"themes/hexo-theme-Kaze/README_zh.md","hash":"0bb0de17cb25e5fa813f287400fc844a66e5278f","modified":1681220206847},{"_id":"themes/hexo-theme-Kaze/LICENSE","hash":"84c87e78e9781eb1c63f74f7f95abdf0c2a13195","modified":1681220206846},{"_id":"themes/hexo-theme-Kaze/.gitignore","hash":"e8e704101761eae82558c166a3e8a5b53e778a5c","modified":1681220206846},{"_id":"themes/hexo-theme-Kaze/README.md","hash":"f15a74294a7055643594983073f5f9a7ee958180","modified":1681220206847},{"_id":"themes/hexo-theme-Kaze/package.json","hash":"f0a0fe32854dd70c5b2dbf5d04d74dc340ccba2d","modified":1681220206865},{"_id":"themes/hexo-theme-Kaze/gulpfile.js","hash":"f1f916f47ce9725557a63495cfc0b7942e3bb287","modified":1681220206849},{"_id":"themes/hexo-theme-Kaze/_config.yml","hash":"2e7199f0637a1219f827018a741a089eaea2c4b8","modified":1681220206848},{"_id":"themes/hexo-theme-Kaze/languages/en.yml","hash":"86bb06af11e288b75421cc96ff66a9c52ddbead8","modified":1681220206849},{"_id":"themes/hexo-theme-Kaze/index.js","hash":"805e996076a6f9d70a77a2e6203f731535fb6912","modified":1681220206849},{"_id":"themes/hexo-theme-Kaze/languages/zh-CN.yml","hash":"1d65eb3e4251f3b24c20ae4e6cbc5d56a695a8ed","modified":1681220206850},{"_id":"themes/hexo-theme-Kaze/layout/about.ejs","hash":"a2adf431dc59b4be6d9296b87a19c0965bac34a4","modified":1681220206859},{"_id":"themes/hexo-theme-Kaze/languages/zh-TW.yml","hash":"76c6f2f284f9e875a6d53e97c90c933bb7f49c8d","modified":1681220206850},{"_id":"themes/hexo-theme-Kaze/layout/archive.ejs","hash":"95f014451d1045df3dfbfe82de255152916bc404","modified":1681220206859},{"_id":"themes/hexo-theme-Kaze/layout/index.ejs","hash":"065ee8a03c816686a210d731d7b5473afb57388f","modified":1681220206860},{"_id":"themes/hexo-theme-Kaze/layout/artitalk.ejs","hash":"b732a3bf354231d5fcb19b69e1dd66b8b8bb33a7","modified":1681220206859},{"_id":"themes/hexo-theme-Kaze/layout/categories.ejs","hash":"e1f3e2641c4305656df9465ee6f9fde93a596dc5","modified":1681220206860},{"_id":"themes/hexo-theme-Kaze/layout/layout.ejs","hash":"d4ed7b223a9fbb5ab64061a1555a7e1c1ead1d4b","modified":1681220206861},{"_id":"themes/hexo-theme-Kaze/layout/category.ejs","hash":"5add5abe99875c0b46125cbbbed576a351915cf3","modified":1681220206860},{"_id":"themes/hexo-theme-Kaze/layout/links.ejs","hash":"d4c821557b4b740c500217074fc844202e0f5c2a","modified":1681220206862},{"_id":"themes/hexo-theme-Kaze/layout/post.ejs","hash":"4eaca2d87b651371a703139c0172967e2a3628c4","modified":1681220206862},{"_id":"themes/hexo-theme-Kaze/layout/tags.ejs","hash":"5978626693a28a8d8992f00327732da6e1ad9bcc","modified":1681220206863},{"_id":"themes/hexo-theme-Kaze/scripts/index.js","hash":"e22ebdc3794fec7a8ce07be943b72e4eebb6a303","modified":1681220206868},{"_id":"themes/hexo-theme-Kaze/lib/lazyload.js","hash":"ed8d0995e204ca03169e227039b849b30c3a8a63","modified":1681220206863},{"_id":"themes/hexo-theme-Kaze/layout/tag.ejs","hash":"de2f0ab78d4272982e4ad945609a1f2a6acac8f4","modified":1681220206863},{"_id":"themes/hexo-theme-Kaze/.github/ISSUE_TEMPLATE/bug-report-----.md","hash":"d1abbb26d1f4e97adf18fc181d3aac1c5072db7c","modified":1681220206845},{"_id":"themes/hexo-theme-Kaze/.github/ISSUE_TEMPLATE/feature-request-----.md","hash":"b644c1324a09c36d2708c06ff0766289afa79097","modified":1681220206845},{"_id":"themes/hexo-theme-Kaze/lib/mergeConfig.js","hash":"6f300970424a6cb3823311bb7fb60b2f12bfdf0c","modified":1681220206864},{"_id":"themes/hexo-theme-Kaze/.github/workflows/release.yml","hash":"4b5ac4a336b649b78bf4d6bae286796113b3f7be","modified":1681220206846},{"_id":"themes/hexo-theme-Kaze/.github/workflows/beta.yml","hash":"1109341feae161628fb542f836ce09774e65d309","modified":1681220206846},{"_id":"themes/hexo-theme-Kaze/layout/_partial/archives.ejs","hash":"4e2037d0cbc1ca0f4830e25a784794604d1279a3","modified":1681220206851},{"_id":"themes/hexo-theme-Kaze/layout/_partial/author.ejs","hash":"fbedae957b0c31a6d27a365394621b80184aaf61","modified":1681220206851},{"_id":"themes/hexo-theme-Kaze/layout/_partial/categories.ejs","hash":"462c3ee01edfa8725ccc99bddafd0dc82f1cbfc5","modified":1681220206852},{"_id":"themes/hexo-theme-Kaze/layout/_partial/footer.ejs","hash":"d7907330ee4d4d4a60ab31343381b65ea5103b6c","modified":1681220206852},{"_id":"themes/hexo-theme-Kaze/layout/_partial/left-aside.ejs","hash":"55a9f75b77f7686e86df551c7db32affd4fb0834","modified":1681220206853},{"_id":"themes/hexo-theme-Kaze/layout/_partial/pagination.ejs","hash":"42b0f7653c01b1a519502435bdfb94e871427119","modified":1681220206853},{"_id":"themes/hexo-theme-Kaze/layout/_partial/nav.ejs","hash":"e38144713594676c67789e655b4463eddb2e8310","modified":1681220206853},{"_id":"themes/hexo-theme-Kaze/layout/_partial/right-aside.ejs","hash":"4132e897ad2e08815e7465882f37e09debe6dabb","modified":1681220206857},{"_id":"themes/hexo-theme-Kaze/layout/_partial/scrollbutton.ejs","hash":"d8bd8cf564f716ff5db5abd382f821b9581dda13","modified":1681220206858},{"_id":"themes/hexo-theme-Kaze/lib/minify/minifyCSS.js","hash":"f3c3ac264a6b788353483f5077b137b51da9a4f2","modified":1681220206864},{"_id":"themes/hexo-theme-Kaze/lib/minify/minifyHTML.js","hash":"df06caff1eef4c6d8035786ba760aeb1d76750fc","modified":1681220206865},{"_id":"themes/hexo-theme-Kaze/layout/_partial/head.ejs","hash":"3dd271aca3ee9e7895eb10bfaad89272f9551e6e","modified":1681220206852},{"_id":"themes/hexo-theme-Kaze/layout/_partial/toc-card.ejs","hash":"6d14483899e8101194d2b34782cb036eed568aa8","modified":1681220206858},{"_id":"themes/hexo-theme-Kaze/layout/_partial/tags.ejs","hash":"38112e194ec9bd2855ace95274f331255c52f843","modified":1681220206858},{"_id":"themes/hexo-theme-Kaze/scripts/generators/pagerouter.js","hash":"f86551dbe588a297ccc744249ac1a69ac82e047f","modified":1681220206866},{"_id":"themes/hexo-theme-Kaze/scripts/helpers/count.js","hash":"a2ecc582e9f4489726bb9668b51b682f8129e30e","modified":1681220206867},{"_id":"themes/hexo-theme-Kaze/scripts/generators/search.js","hash":"c336bcd252be642f7f3a6a2ec2c75bbc9067f610","modified":1681220206866},{"_id":"themes/hexo-theme-Kaze/layout/_partial/recent-post.ejs","hash":"d1b88c4ed9629d579bd6ef76f95b823d87ce0233","modified":1681220206857},{"_id":"themes/hexo-theme-Kaze/lib/minify/minifyJS.js","hash":"cb5d417447e7aaf8c78fa0f7b408659d86d5eca6","modified":1681220206865},{"_id":"themes/hexo-theme-Kaze/scripts/tag/note.js","hash":"2cfa3b68b30f53480a7657174e6d662feb850526","modified":1681220206868},{"_id":"themes/hexo-theme-Kaze/scripts/highlight/replace.js","hash":"38879d7e4bafd016a0a3cd86df65233eb2d0f92e","modified":1681220206867},{"_id":"themes/hexo-theme-Kaze/scripts/helpers/load.js","hash":"ceb31c919e9f0012fbb6e54cc5b7ba746e03279a","modified":1681220206867},{"_id":"themes/hexo-theme-Kaze/source/js/main.js","hash":"831bc942def50f6c23fa45043c940fd43161c648","modified":1681220206888},{"_id":"themes/hexo-theme-Kaze/source/css/main.styl","hash":"8b602110e32636076754d9e26555f4c924dfa8bb","modified":1681220206881},{"_id":"themes/hexo-theme-Kaze/src/scripts/index.d.ts","hash":"f257b1abca545c0debd3925d9f4dfeb1c1a371d6","modified":1681220206889},{"_id":"themes/hexo-theme-Kaze/src/scripts/popButton.ts","hash":"55c819665e573def9496ff881dfb467eee5be1e4","modified":1681220206890},{"_id":"themes/hexo-theme-Kaze/src/scripts/console.ts","hash":"fb1272491d5f211469f531536c708a5cecebd82f","modified":1681220206888},{"_id":"themes/hexo-theme-Kaze/src/scripts/menuButton.ts","hash":"87dfe7069e11b72e84f6b7583656b7f229f86dbc","modified":1681220206890},{"_id":"themes/hexo-theme-Kaze/src/scripts/rollup.config.js","hash":"5b172c73b324a3e35efcf94063331ac2a2f47a6b","modified":1681220206890},{"_id":"themes/hexo-theme-Kaze/src/scripts/search.ts","hash":"22977bc90603643e89fec560ca2c8da52415dd6f","modified":1681220206891},{"_id":"themes/hexo-theme-Kaze/src/scripts/scrollUp.ts","hash":"4db7c436ba93ec10acf3ecf7b67f3ebc8dae7a5a","modified":1681220206891},{"_id":"themes/hexo-theme-Kaze/src/scripts/tsconfig.json","hash":"ba07b3d567bfab7b4fcccc0efcfe72e3917dc0d7","modified":1681220206892},{"_id":"themes/hexo-theme-Kaze/src/scripts/darkMode.ts","hash":"f9eda2794effec0af2a2ebd6588bca70e97caead","modified":1681220206889},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/latex.ejs","hash":"642795cb714e753795c0402798cbb67f6ad76426","modified":1681220206856},{"_id":"themes/hexo-theme-Kaze/source/css/_base/color.styl","hash":"e379e8e2b3a2f41f414e1cc7b6ad3d609566eaca","modified":1681220206869},{"_id":"themes/hexo-theme-Kaze/source/css/_base/highlight.styl","hash":"ac73b7227cc72062b40d46087d87451eb492a617","modified":1681220206869},{"_id":"themes/hexo-theme-Kaze/src/scripts/main.ts","hash":"06881ee55d3c12d47401934f9b8a3ea29df168a4","modified":1681220206889},{"_id":"themes/hexo-theme-Kaze/source/css/_base/index.styl","hash":"c5eb9ee07af5825d919504fd55acaf7c74f92edc","modified":1681220206869},{"_id":"themes/hexo-theme-Kaze/source/css/_base/reset.styl","hash":"7f35dfc776c013f61a7485c8285c65316ec47929","modified":1681220206870},{"_id":"themes/hexo-theme-Kaze/source/css/_mixins/index.styl","hash":"f39e33c0d5b45e3c737207f7eb187a406d444ea8","modified":1681220206870},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/archives.styl","hash":"af3ce4bd66908822a194b57db497aefd2020b187","modified":1681220206871},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/categories.styl","hash":"5a515a02a643e4bf1a60bcb2aed73ff4c1a4e34e","modified":1681220206871},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/lightbox.ejs","hash":"9a2c363ab54d64a1c9d0fc0cd1652e029013047c","modified":1681220206857},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/about.styl","hash":"26612eb1561c5aa2c14322546c22ff3cc210903a","modified":1681220206871},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/rewrite.styl","hash":"00f3b9899d89058da78ed63ed7e7e02476074ac7","modified":1681220206872},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/tags.styl","hash":"ecf086869ac2b3a7c8ac35259c67bce7491c8850","modified":1681220206872},{"_id":"themes/hexo-theme-Kaze/source/js/lib/busuanzi.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1681220206882},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/index.styl","hash":"26f96b71c3399a0091d9a3eeb013d113834c6de2","modified":1681220206871},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/comments/gitalk.ejs","hash":"1df54c8518b7c877ca1fd23bdac956935502edbc","modified":1681220206855},{"_id":"themes/hexo-theme-Kaze/source/css/_variables/index.styl","hash":"e11f4ac520407ccfe6413c10da4e9b63b90dfd9b","modified":1681220206881},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lozad.min.js","hash":"2230059353a889fb3b6c7746030a7f3267fb4568","modified":1681220206883},{"_id":"themes/hexo-theme-Kaze/source/js/lib/md5.min.js","hash":"aed768f6bf5e3518a403452cb400b098fe4eb629","modified":1681220206883},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/comments/valine.ejs","hash":"e60f4ecbfff3b97ef093e3d241635aa877921e40","modified":1681220206856},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/comments/waline.ejs","hash":"7b7291c08bfd23ebd5af89767a9fbcfe702a11a0","modified":1681220206856},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/archive.styl","hash":"7e4699e40e827aa30362d2fda73445b1f9e18dba","modified":1681220206873},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/button.styl","hash":"0cf7036ab2be25adc99b2ebb4a9f1bae492c278a","modified":1681220206873},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/author.styl","hash":"6848bd92a6cff575a5052fd461728e91ed381dbb","modified":1681220206873},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/card.styl","hash":"17b5a0aae38b0c8c6b9430a238ece3994adec67f","modified":1681220206874},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/columns.styl","hash":"ac58e48335b85302227e005474898217e69ce9bc","modified":1681220206875},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/categories.styl","hash":"a02a4660c02c56d30744d74ef12bb6ebcda692b3","modified":1681220206875},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/container.styl","hash":"b62f9beb50f9bc6272b3b8bda0eff3eb049a31a2","modified":1681220206875},{"_id":"themes/hexo-theme-Kaze/layout/_partial/plugins/comments/livere.ejs","hash":"433f78a6bcdb944050868f33a2e326511bdd3f09","modified":1681220206855},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/footer.styl","hash":"30fa2c37da0c064118b3d7a654d3a0cbcbcb0683","modified":1681220206877},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/nav.styl","hash":"0f54709fe6bea2da3aab6f48f5134a410f8d1012","modified":1681220206877},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/post.styl","hash":"0879fa7e7a3a564cb1d6fbcaa9f31b9c131b63c2","modified":1681220206878},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/pagination.styl","hash":"87787a0ac9863dc2ef4647e665dc7723116af9c6","modified":1681220206878},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/friends.styl","hash":"240314ed822f363edcd26700ba969a90c34c9318","modified":1681220206877},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/postlist.styl","hash":"332d25b90c501fdf6ede0dc809ad5934c4abbfe7","modified":1681220206878},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/toc.styl","hash":"f3209f29aa79527abfa87eb8e0a3ea3efe28e586","modified":1681220206880},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/recentposts.styl","hash":"282a26560e0ca9e121bdcdb3d297a1332a9390ff","modified":1681220206879},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/search.styl","hash":"640d35eb711bab792b0e315c48bae132ff213259","modified":1681220206879},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/section.styl","hash":"708375feb91a99dd4dd6be07422991c7aaa74813","modified":1681220206879},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lightbox/baguetteBox.min.css","hash":"3898827bc70ad71257f992ad1db7af29c391613d","modified":1681220206882},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-coy.min.css","hash":"24a435be86a12adf78fc448aa52f6fb7b635eb04","modified":1681220206883},{"_id":"themes/hexo-theme-Kaze/source/js/lib/lightbox/baguetteBox.min.js","hash":"24c5e555525ee9d41e6e48a14954d03bd689a9aa","modified":1681220206882},{"_id":"themes/hexo-theme-Kaze/source/css/_pages/widgets/tags.styl","hash":"fd57cb00ba7ae0b7253da59810be4d5c08f01f98","modified":1681220206880},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-dark.min.css","hash":"e13ef6cdba90cb700e894ceff4584e95bd60de4c","modified":1681220206884},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-okaidia.min.css","hash":"641ab0b006056b1182d4deb958a340033094f7ca","modified":1681220206885},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-line-numbers.min.css","hash":"b8d1a09efe704ebd1854c894f49b573721b7427d","modified":1681220206884},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-funky.min.css","hash":"c7bca25425490b9465bd546b2d08f28094dc25ee","modified":1681220206884},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-tomorrow.min.css","hash":"9ae9c010592228f0913714d2406420ab9d4dc7b4","modified":1681220206886},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-twilight.min.css","hash":"402395b16aacc61cd76002ca1eea02d101c98380","modified":1681220206886},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism-solarizedlight.min.css","hash":"cf3751130cc2c473d8b6535b5eea7799373875b0","modified":1681220206885},{"_id":"themes/hexo-theme-Kaze/source/js/lib/prism/prism.min.css","hash":"aa3607158053897633d6cf9247b64a1df8f13ec3","modified":1681220206886},{"_id":"source/_posts/test.md","hash":"038bc3e2a91f4ef854183abe9ad112feee8ff682","modified":1681222713359},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1681225313263},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1681225313159},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":1681225313266},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"30e3f4ccfef8474c05cf0b1eb02e91bd0a152807","modified":1681225313227},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1681225313161},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1681225313228},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1681225313163},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1681225313166},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1681225313169},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":1681225313181},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1681225313172},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1681225313182},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1681225313183},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1681225313187},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1681225313194},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1681225313189},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1681225313267},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1681225313194},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1681225313268},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1681225313268},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1681225313269},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1681225313270},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1681225313270},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1681225313271},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1681225313271},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1681225313272},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1681225313166},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1681225313170},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1681225313172},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1681225313174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1681225313175},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1681225313180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1681225313180},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1681225313178},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1681225313188},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1681225313184},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1681225313190},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1681225313161},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1681225313192},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1681225313250},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1681225313251},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1681225313229},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1681225313234},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1681225313199},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1681225313206},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1681225313235},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1681225313217},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1681225313223},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1681225313211},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1681225313265},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1681225313200},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1681225313255},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1681225313202},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1681225313207},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1681225313216},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1681225313214},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1681225313210},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1681225313222},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1681225313226},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1681225313215},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1681225313201},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1681225313222},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1681225313202},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1681225313209},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1681225313213},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1681225313218},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1681225313218},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1681225313205},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1681225313206},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1681225313207},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1681225313211},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1681225313213},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1681225313220},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1681225313224},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1681225313225},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1681225313225},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1681225313203},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1681225313227},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1681225313219},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1681225313224},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1681225313223},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1681225313168},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1681225313193},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1681225313173},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1681225313176},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1681225313177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1681225313179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1681225313179},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1681225313183},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1681225313196},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1681225313190},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1681225313197},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1681225313198},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1681225313198},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1681225313167},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1681225313186},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1681225313164},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1681225313165},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1681225313174},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":1681225313177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1681225313181},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1681225313177},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":1681225313185},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1681225313184},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1681225313196},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1681225313169},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1681225313187},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1681225313185},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":1681225313175},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1681225313192},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1681225313186},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1681225313193},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1681225313195},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1681225313258},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1681225313239},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1681225313204},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1681225313240},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1681225313242},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1681225313208},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1681225313209},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1681225313210},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1681225313212},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1681225313214},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1681225313217},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1681225313236},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1681225313238},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1681225313246},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1681225313253},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1681225313244},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1681225313254},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1681225313241},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1681225313255},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1681225313244},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1681225313245},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1681225313252},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1681225313247},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1681225313250},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1681225313256},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1681225313259},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1681225313260},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1681225313263},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1681225313237},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1681225313238},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1681225313243},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1681225313245},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1681225313248},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1681225313248},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1681225313249},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1681225313249},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1681225313257},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1681225313256},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1681225313257},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1681225313259},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1681225313261},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1681225313260},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1681225313261},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1681225313264},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1681225313234},{"_id":"source/_posts/React.md","hash":"a0c793537cc81d40fce7fc11ebe0f665926652b4","modified":1681227626694},{"_id":"source/about/index.md","hash":"f42a2650fd1332fd2cee7ebc0d0273560abc76ec","modified":1681227861149}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2023-04-11T15:42:54.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2023-04-11 23:42:54\n---\n","updated":"2023-04-11T15:44:21.149Z","path":"about/index.html","_id":"clgcfnh2l000030mp1dq4azl7","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-04-11T13:28:42.216Z","updated":"2023-04-11T13:26:40.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgcazoho00003omp5z3ifasl","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"React","date":"2023-04-11T14:02:15.000Z","_content":"- React 允许你创建组件，**应用程序的可复用 UI 元素。**\n- 在 React 应用程序中，每一个 UI 模块都是一个组件。\n- React 是常规的 JavaScript 函数，除了：\n   1. 它们的名字总是以大写字母开头。\n   2. 它们返回 JSX 标签。\n\n例子：\n```javascript\nfunction Profile() {\n  return (\n    <img\n      src=\"https://i.imgur.com/MK3eW3As.jpg\"\n      alt=\"Katherine Johnson\"\n    />\n  );\n}\n\nexport default function Gallery() {\n  return (\n    <section>\n      <h1>了不起的科学家</h1>\n      <Profile />\n      <Profile />\n      <Profile />\n    </section>\n  );\n}\n\n```\n## JSX规则：\n\n1. 只能返回一个根元素：一个组件中含有多个标签，得用一个父元素将他们包裹起来，例如：\n```html\n<div>\n  <h1>海蒂·拉玛的代办事项</h1>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n    >\n  <ul>\n    ...\n  </ul>\n</div>\n<!--或者你可以选择用<></>  -->\n<>\n  <h1>海蒂·拉玛的代办事项</h1>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n  >\n  <ul>\n    ...\n  </ul>\n</>\n```\n\n2. 标签必须闭合：如img等自闭合标签必须写成<img/>\n```html\n<>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n   />\n  <ul>\n      <li>发明一种新式交通信号灯</li>\n      <li>排练一个电影场景</li>\n      <li>改进频谱技术</li>\n  </ul>\n</>\n```\n\n3. 使用驼峰式命名给~~所有~~大部分属性命名：因为JSX语法底层还是转化为JS代码，所以命名不允许出现-以及class，得用驼峰式命名和className代\n```html\n<img \n  src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n  alt=\"Hedy Lamarr\" \n  className=\"photo\"\n/>\n```\n\n4. {}内可以使用JS变量，JS函数以及JS对象\n```javascript\n//函数\nconst today = new Date();\n\nfunction formatDate(date) {\n  return new Intl.DateTimeFormat(\n    'en-US',\n    { weekday: 'long' }\n  ).format(date);\n}\n\nexport default function TodoList() {\n  return (\n    <h1>To Do List for {formatDate(today)}</h1>\n  );\n}\n```\n```javascript\nexport default function TodoList() {\n  const name = 'Gregorio Y. Zara';\n  return (\n    <h1>{name}'s To Do List</h1>\n  );\n}\n\n```\nJSX总结：\n\n- JSX 引号内的值会作为字符串传递给属性。\n- 大括号让你可以将 JavaScript 的逻辑和变量带入到标签中。\n- 它们会在 JSX 标签中的内容区域或紧随属性的 = 后起作用。\n- {{ 和 }} 并不是什么特殊的语法：它只是包在 JSX 大括号内的 JavaScript 对象\n## props\nprops是在父组件和子组件中传递的内容，好比JS中传入函数的参数，父组件也可以给子组件传递参数\n第一步：将props传递给子组件\n```javascript\nexport default function Profile() {\n  return (\n    <Avatar\n      person={{ name: 'Lin Lanying', imageId: '1bX5QH6' }}\n      size={100}\n    />\n  );\n}\n```\n第二步：在子组件中读取props\n```javascript\nfunction Avatar({ person, size }) { //不要忘记{}\n  // 在这里 person 和 size 是可访问的\n}\n```\n\n**P.S 渲染列表的时候要记得给每一个列表一个key**\n\n## 关于组件的纯粹：\n\n- 一个组件必须是纯粹的，就意味着：\n   - **只负责自己的任务。** 不应更改渲染前存在的任何对象或变量。\n   - **输入相同，则输出相同。** 给定相同的输入，组件应该总是返回相同的 JSX。\n- 渲染随时可能发生，因此组件不应依赖于彼此的渲染顺序。\n- 你不应该改变组件用于渲染的任何输入。这包括 props、state 和 context。通过setEffect 来更新界面，而不要改变预先存在的对象。\n- 努力在你返回的 JSX 中表达你的组件逻辑。当你需要“改变事物”时，你通常希望在事件处理程序中进行。作为最后的手段，你可以使用 useEffect。\n- 编写纯函数需要一些练习，但它充分释放了 React 范式的能力。\n## 响应事件\n### 添加响应事件：\n如需添加一个事件处理函数，你需要先定义一个函数，然后 [将其作为 prop 传入](https://react.docschina.org/learn/passing-props-to-a-component) 合适的 JSX 标签。\n```javascript\nexport default function Button() {\n  return (\n    <button>\n      未绑定任何事件\n    </button>\n  );\n}\n```\n按照如下三个步骤，即可让它在用户点击时显示消息：\n\n1. 在 Button 组件 _内部_ 声明一个名为 handleClick 的函数。\n2. 实现函数内部的逻辑（使用 alert 来显示消息）。\n3. 添加 onClick={handleClick} 到 <button> JSX 中。\n```javascript\nexport default function Button() {\n  function handleClick() {\n    alert('你点击了我！');\n  }\n\n  return (\n    <button onClick={handleClick}>\n      点我\n    </button>\n  );\n}\n```\n> 按照惯例，通常将事件处理程序命名为 handle，后接事件名。你会经常看到 onClick={handleClick}，onMouseEnter={handleMouseEnter} 等。\n\n### 阻止事件传播：\n如果你想阻止一个事件到达父组件，你需要像下面 Button 组件那样调用 e.stopPropagation() \n### 阻止默认事件\n你可以调用事件对象中的 e.preventDefault() 来阻止这种情况发生\n### 摘要：\n\n- 你可以通过将函数作为 prop 传递给元素如 <button> 来处理事件。\n- 必须传递事件处理函数，**而非函数调用！** onClick={handleClick} ，不是 onClick={handleClick()}。\n- 你可以单独或者内联定义事件处理函数。\n- 事件处理函数在组件内部定义，所以它们可以访问 props。\n- 你可以在父组件中定义一个事件处理函数，并将其作为 prop 传递给子组件。\n- 你可以根据特定于应用程序的名称定义事件处理函数的 prop。\n- 事件会向上传播。通过事件的第一个参数调用 e.stopPropagation() 来防止这种情况。\n- 事件可能具有不需要的浏览器默认行为。调用 e.preventDefault() 来阻止这种情况。\n- 从子组件显式调用事件处理函数 prop 是事件传播的另一种优秀替代方案。\n## 关于State\n\n- 当一个组件需要在多次渲染间“记住”某些信息时使用 state 变量。\n- State 变量是通过调用 useState Hook 来声明的。\n- Hook 是以 use 开头的特殊函数。它们能让你 “hook” 到像 state 这样的 React 特性中。\n- Hook 可能会让你想起 import：它们需要在非条件语句中调用。调用 Hook 时，包括 useState，仅在组件或另一个 Hook 的顶层被调用才有效。\n- useState Hook 返回一对值：当前 state 和更新它的函数。\n- 你可以拥有多个 state 变量。在内部，React 按顺序匹配它们。\n- State 是组件私有的。如果你在两个地方渲染它，则每个副本都有独属于自己的 state。\n\n使用方法：\n```javascript\nimport { useState } from 'react'; //要添加 state 变量，先从文件顶部的 React 中导入 useState\n\nconst [index, setIndex] = useState(0); //创建state状态\n\nfunction handleClick() {\n  setIndex(index + 1);\n} //改变状态\n```\n**请记住，必须在条件语句外并且始终以相同的顺序调用 Hook！**\n## 渲染：\n\n- 在一个 React 应用中一次屏幕更新都会发生以下三个步骤：\n   1. 触发\n   2. 渲染\n   3. 提交\n- 您可以使用严格模式去找到组件中的错误\n- 如果渲染结果与上次一样，那么 React 将不会修改 DOM\n- 设置 state 只会为 _下一次_ 渲染变更 state 的值\n- 批处理渲染：\n   - 设置 state 不会更改现有渲染中的变量，但会请求一次新的渲染。\t\n   - React 会在事件处理函数执行完成之后处理 state 更新。这被称为批处理。\n   - 要在一个事件中多次更新某些 state，你可以使用 setNumber(n => n + 1) 更新函数。\n## 更新状态中的对象\nState 可以保存任何类型的 JavaScript 值，包括对象。但是你不应该直接改变你在 React 状态下持有的对象。相反，当你想更新一个对象时，你需要创建一个新对象（或复制一个现有对象），然后设置状态以使用该副本。\n```javascript\nonPointerMove={e => {\n  position.x = e.clientX;\n  position.y = e.clientY;\n}} //错误示范\n\n\nonPointerMove={e => {\n  setPosition({\n    x: e.clientX,\n    y: e.clientY\n  });\n}}//应该这样\n```\n你也可以使用`...`对象扩展语法\n```javascript\nsetPerson({\n  ...person, // Copy the old fields\n  firstName: e.target.value // But override this one\n});\n```\n但一碰到嵌套的对象，复制一个新对象就显得非常麻烦\n所以我们可以使用`Immer`写更简洁的更新\n步骤：\n\n1. 运行 npm install use-immer 将 Immer 添加为依赖项\n2. 然后将 import { useState } from 'react' 替换为 import { useImmer } from 'use-immer'\n3. 将const [] = useState() 变成 const [] = useImmer() \n4. 再使用update(draft=>{draft.name = xxx}) 进行修改\n\n**摘要**：\n\n- Treat all state in React as immutable.\n将 React 中的所有状态视为不可变的。\n- When you store objects in state, mutating them will not trigger renders and will change the state in previous render “snapshots”.\n当您将对象存储在状态中时，改变它们不会触发渲染，并且会更改先前渲染“快照”中的状态。\n- Instead of mutating an object, create a _new_ version of it, and trigger a re-render by setting state to it.\n与其改变对象，不如创建它的新版本，并通过为其设置状态来触发重新渲染。\n- You can use the {...obj, something: 'newValue'} object spread syntax to create copies of objects.\n您可以使用 {...obj, something: 'newValue'} 对象传播语法来创建对象的副本。\n- Spread syntax is shallow: it only copies one level deep.\n传播语法很浅：它只复制一层深。\n- To update a nested object, you need to create copies all the way up from the place you’re updating.\n要更新嵌套对象，您需要从要更新的地方一直向上创建副本。\n- To reduce repetitive copying code, use Immer.\n要减少重复复制代码，请使用 Immer。\n## 更新数组：\n更新数组和对象一样，需要复制再修改\n善于利用map，fliter，slice等数组方法\n例子：\n```javascript\nfunction handleIncreaseClick(productId) {\n    setProducts(products.map(product=>{\n      if(productId===product.id){\n        return{\n          ...product,\n          count : product.count+1\n        }\n      }else{\n        return product\n      }\n    }))\n  } //id+1\n```\n\n","source":"_posts/React.md","raw":"---\ntitle: React\ndate: 2023-04-11 22:02:15\ntag:  front-end\n---\n- React 允许你创建组件，**应用程序的可复用 UI 元素。**\n- 在 React 应用程序中，每一个 UI 模块都是一个组件。\n- React 是常规的 JavaScript 函数，除了：\n   1. 它们的名字总是以大写字母开头。\n   2. 它们返回 JSX 标签。\n\n例子：\n```javascript\nfunction Profile() {\n  return (\n    <img\n      src=\"https://i.imgur.com/MK3eW3As.jpg\"\n      alt=\"Katherine Johnson\"\n    />\n  );\n}\n\nexport default function Gallery() {\n  return (\n    <section>\n      <h1>了不起的科学家</h1>\n      <Profile />\n      <Profile />\n      <Profile />\n    </section>\n  );\n}\n\n```\n## JSX规则：\n\n1. 只能返回一个根元素：一个组件中含有多个标签，得用一个父元素将他们包裹起来，例如：\n```html\n<div>\n  <h1>海蒂·拉玛的代办事项</h1>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n    >\n  <ul>\n    ...\n  </ul>\n</div>\n<!--或者你可以选择用<></>  -->\n<>\n  <h1>海蒂·拉玛的代办事项</h1>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n  >\n  <ul>\n    ...\n  </ul>\n</>\n```\n\n2. 标签必须闭合：如img等自闭合标签必须写成<img/>\n```html\n<>\n  <img \n    src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n    alt=\"Hedy Lamarr\" \n    class=\"photo\"\n   />\n  <ul>\n      <li>发明一种新式交通信号灯</li>\n      <li>排练一个电影场景</li>\n      <li>改进频谱技术</li>\n  </ul>\n</>\n```\n\n3. 使用驼峰式命名给~~所有~~大部分属性命名：因为JSX语法底层还是转化为JS代码，所以命名不允许出现-以及class，得用驼峰式命名和className代\n```html\n<img \n  src=\"https://i.imgur.com/yXOvdOSs.jpg\" \n  alt=\"Hedy Lamarr\" \n  className=\"photo\"\n/>\n```\n\n4. {}内可以使用JS变量，JS函数以及JS对象\n```javascript\n//函数\nconst today = new Date();\n\nfunction formatDate(date) {\n  return new Intl.DateTimeFormat(\n    'en-US',\n    { weekday: 'long' }\n  ).format(date);\n}\n\nexport default function TodoList() {\n  return (\n    <h1>To Do List for {formatDate(today)}</h1>\n  );\n}\n```\n```javascript\nexport default function TodoList() {\n  const name = 'Gregorio Y. Zara';\n  return (\n    <h1>{name}'s To Do List</h1>\n  );\n}\n\n```\nJSX总结：\n\n- JSX 引号内的值会作为字符串传递给属性。\n- 大括号让你可以将 JavaScript 的逻辑和变量带入到标签中。\n- 它们会在 JSX 标签中的内容区域或紧随属性的 = 后起作用。\n- {{ 和 }} 并不是什么特殊的语法：它只是包在 JSX 大括号内的 JavaScript 对象\n## props\nprops是在父组件和子组件中传递的内容，好比JS中传入函数的参数，父组件也可以给子组件传递参数\n第一步：将props传递给子组件\n```javascript\nexport default function Profile() {\n  return (\n    <Avatar\n      person={{ name: 'Lin Lanying', imageId: '1bX5QH6' }}\n      size={100}\n    />\n  );\n}\n```\n第二步：在子组件中读取props\n```javascript\nfunction Avatar({ person, size }) { //不要忘记{}\n  // 在这里 person 和 size 是可访问的\n}\n```\n\n**P.S 渲染列表的时候要记得给每一个列表一个key**\n\n## 关于组件的纯粹：\n\n- 一个组件必须是纯粹的，就意味着：\n   - **只负责自己的任务。** 不应更改渲染前存在的任何对象或变量。\n   - **输入相同，则输出相同。** 给定相同的输入，组件应该总是返回相同的 JSX。\n- 渲染随时可能发生，因此组件不应依赖于彼此的渲染顺序。\n- 你不应该改变组件用于渲染的任何输入。这包括 props、state 和 context。通过setEffect 来更新界面，而不要改变预先存在的对象。\n- 努力在你返回的 JSX 中表达你的组件逻辑。当你需要“改变事物”时，你通常希望在事件处理程序中进行。作为最后的手段，你可以使用 useEffect。\n- 编写纯函数需要一些练习，但它充分释放了 React 范式的能力。\n## 响应事件\n### 添加响应事件：\n如需添加一个事件处理函数，你需要先定义一个函数，然后 [将其作为 prop 传入](https://react.docschina.org/learn/passing-props-to-a-component) 合适的 JSX 标签。\n```javascript\nexport default function Button() {\n  return (\n    <button>\n      未绑定任何事件\n    </button>\n  );\n}\n```\n按照如下三个步骤，即可让它在用户点击时显示消息：\n\n1. 在 Button 组件 _内部_ 声明一个名为 handleClick 的函数。\n2. 实现函数内部的逻辑（使用 alert 来显示消息）。\n3. 添加 onClick={handleClick} 到 <button> JSX 中。\n```javascript\nexport default function Button() {\n  function handleClick() {\n    alert('你点击了我！');\n  }\n\n  return (\n    <button onClick={handleClick}>\n      点我\n    </button>\n  );\n}\n```\n> 按照惯例，通常将事件处理程序命名为 handle，后接事件名。你会经常看到 onClick={handleClick}，onMouseEnter={handleMouseEnter} 等。\n\n### 阻止事件传播：\n如果你想阻止一个事件到达父组件，你需要像下面 Button 组件那样调用 e.stopPropagation() \n### 阻止默认事件\n你可以调用事件对象中的 e.preventDefault() 来阻止这种情况发生\n### 摘要：\n\n- 你可以通过将函数作为 prop 传递给元素如 <button> 来处理事件。\n- 必须传递事件处理函数，**而非函数调用！** onClick={handleClick} ，不是 onClick={handleClick()}。\n- 你可以单独或者内联定义事件处理函数。\n- 事件处理函数在组件内部定义，所以它们可以访问 props。\n- 你可以在父组件中定义一个事件处理函数，并将其作为 prop 传递给子组件。\n- 你可以根据特定于应用程序的名称定义事件处理函数的 prop。\n- 事件会向上传播。通过事件的第一个参数调用 e.stopPropagation() 来防止这种情况。\n- 事件可能具有不需要的浏览器默认行为。调用 e.preventDefault() 来阻止这种情况。\n- 从子组件显式调用事件处理函数 prop 是事件传播的另一种优秀替代方案。\n## 关于State\n\n- 当一个组件需要在多次渲染间“记住”某些信息时使用 state 变量。\n- State 变量是通过调用 useState Hook 来声明的。\n- Hook 是以 use 开头的特殊函数。它们能让你 “hook” 到像 state 这样的 React 特性中。\n- Hook 可能会让你想起 import：它们需要在非条件语句中调用。调用 Hook 时，包括 useState，仅在组件或另一个 Hook 的顶层被调用才有效。\n- useState Hook 返回一对值：当前 state 和更新它的函数。\n- 你可以拥有多个 state 变量。在内部，React 按顺序匹配它们。\n- State 是组件私有的。如果你在两个地方渲染它，则每个副本都有独属于自己的 state。\n\n使用方法：\n```javascript\nimport { useState } from 'react'; //要添加 state 变量，先从文件顶部的 React 中导入 useState\n\nconst [index, setIndex] = useState(0); //创建state状态\n\nfunction handleClick() {\n  setIndex(index + 1);\n} //改变状态\n```\n**请记住，必须在条件语句外并且始终以相同的顺序调用 Hook！**\n## 渲染：\n\n- 在一个 React 应用中一次屏幕更新都会发生以下三个步骤：\n   1. 触发\n   2. 渲染\n   3. 提交\n- 您可以使用严格模式去找到组件中的错误\n- 如果渲染结果与上次一样，那么 React 将不会修改 DOM\n- 设置 state 只会为 _下一次_ 渲染变更 state 的值\n- 批处理渲染：\n   - 设置 state 不会更改现有渲染中的变量，但会请求一次新的渲染。\t\n   - React 会在事件处理函数执行完成之后处理 state 更新。这被称为批处理。\n   - 要在一个事件中多次更新某些 state，你可以使用 setNumber(n => n + 1) 更新函数。\n## 更新状态中的对象\nState 可以保存任何类型的 JavaScript 值，包括对象。但是你不应该直接改变你在 React 状态下持有的对象。相反，当你想更新一个对象时，你需要创建一个新对象（或复制一个现有对象），然后设置状态以使用该副本。\n```javascript\nonPointerMove={e => {\n  position.x = e.clientX;\n  position.y = e.clientY;\n}} //错误示范\n\n\nonPointerMove={e => {\n  setPosition({\n    x: e.clientX,\n    y: e.clientY\n  });\n}}//应该这样\n```\n你也可以使用`...`对象扩展语法\n```javascript\nsetPerson({\n  ...person, // Copy the old fields\n  firstName: e.target.value // But override this one\n});\n```\n但一碰到嵌套的对象，复制一个新对象就显得非常麻烦\n所以我们可以使用`Immer`写更简洁的更新\n步骤：\n\n1. 运行 npm install use-immer 将 Immer 添加为依赖项\n2. 然后将 import { useState } from 'react' 替换为 import { useImmer } from 'use-immer'\n3. 将const [] = useState() 变成 const [] = useImmer() \n4. 再使用update(draft=>{draft.name = xxx}) 进行修改\n\n**摘要**：\n\n- Treat all state in React as immutable.\n将 React 中的所有状态视为不可变的。\n- When you store objects in state, mutating them will not trigger renders and will change the state in previous render “snapshots”.\n当您将对象存储在状态中时，改变它们不会触发渲染，并且会更改先前渲染“快照”中的状态。\n- Instead of mutating an object, create a _new_ version of it, and trigger a re-render by setting state to it.\n与其改变对象，不如创建它的新版本，并通过为其设置状态来触发重新渲染。\n- You can use the {...obj, something: 'newValue'} object spread syntax to create copies of objects.\n您可以使用 {...obj, something: 'newValue'} 对象传播语法来创建对象的副本。\n- Spread syntax is shallow: it only copies one level deep.\n传播语法很浅：它只复制一层深。\n- To update a nested object, you need to create copies all the way up from the place you’re updating.\n要更新嵌套对象，您需要从要更新的地方一直向上创建副本。\n- To reduce repetitive copying code, use Immer.\n要减少重复复制代码，请使用 Immer。\n## 更新数组：\n更新数组和对象一样，需要复制再修改\n善于利用map，fliter，slice等数组方法\n例子：\n```javascript\nfunction handleIncreaseClick(productId) {\n    setProducts(products.map(product=>{\n      if(productId===product.id){\n        return{\n          ...product,\n          count : product.count+1\n        }\n      }else{\n        return product\n      }\n    }))\n  } //id+1\n```\n\n","slug":"React","published":1,"updated":"2023-04-11T15:40:26.694Z","_id":"clgcf7ezm000084mpeadzds45","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>React 允许你创建组件，<strong>应用程序的可复用 UI 元素。</strong></li>\n<li>在 React 应用程序中，每一个 UI 模块都是一个组件。</li>\n<li>React 是常规的 JavaScript 函数，除了：<ol>\n<li>它们的名字总是以大写字母开头。</li>\n<li>它们返回 JSX 标签。</li>\n</ol>\n</li>\n</ul>\n<p>例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Profile</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/MK3eW3As.jpg&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Katherine Johnson&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">    /&gt;</span></span><br>  );<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Gallery</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span>&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>了不起的科学家<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span></span><br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"JSX规则：\"><a href=\"#JSX规则：\" class=\"headerlink\" title=\"JSX规则：\"></a>JSX规则：</h2><ol>\n<li><p>只能返回一个根元素：一个组件中含有多个标签，得用一个父元素将他们包裹起来，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>海蒂·拉玛的代办事项<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">    &gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>    ...<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--或者你可以选择用&lt;&gt;&lt;/&gt;  --&gt;</span><br><span class=\"hljs-tag\">&lt;&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>海蒂·拉玛的代办事项<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">  &gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>    ...<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>标签必须闭合：如img等自闭合标签必须写成<img/></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">   /&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>发明一种新式交通信号灯<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>排练一个电影场景<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>改进频谱技术<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>使用驼峰式命名给<del>所有</del>大部分属性命名：因为JSX语法底层还是转化为JS代码，所以命名不允许出现-以及class，得用驼峰式命名和className代</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>{}内可以使用JS变量，JS函数以及JS对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//函数</span><br><span class=\"hljs-keyword\">const</span> today = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">formatDate</span>(<span class=\"hljs-params\">date</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Intl</span>.<span class=\"hljs-title class_\">DateTimeFormat</span>(<br>    <span class=\"hljs-string\">&#x27;en-US&#x27;</span>,<br>    &#123; <span class=\"hljs-attr\">weekday</span>: <span class=\"hljs-string\">&#x27;long&#x27;</span> &#125;<br>  ).<span class=\"hljs-title function_\">format</span>(date);<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TodoList</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>To Do List for &#123;formatDate(today)&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TodoList</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">&#x27;Gregorio Y. Zara&#x27;</span>;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>&#123;name&#125;&#x27;s To Do List<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>JSX总结：</p>\n</li>\n</ol>\n<ul>\n<li>JSX 引号内的值会作为字符串传递给属性。</li>\n<li>大括号让你可以将 JavaScript 的逻辑和变量带入到标签中。</li>\n<li>它们会在 JSX 标签中的内容区域或紧随属性的 = 后起作用。</li>\n<li> 并不是什么特殊的语法：它只是包在 JSX 大括号内的 JavaScript 对象\n<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2>props是在父组件和子组件中传递的内容，好比JS中传入函数的参数，父组件也可以给子组件传递参数<br>第一步：将props传递给子组件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Profile</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Avatar</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">person</span>=<span class=\"hljs-string\">&#123;&#123;</span> <span class=\"hljs-attr\">name:</span> &#x27;<span class=\"hljs-attr\">Lin</span> <span class=\"hljs-attr\">Lanying</span>&#x27;, <span class=\"hljs-attr\">imageId:</span> &#x27;<span class=\"hljs-attr\">1bX5QH6</span>&#x27; &#125;&#125;</span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&#123;100&#125;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">    /&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n第二步：在子组件中读取props<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Avatar</span>(<span class=\"hljs-params\">&#123; person, size &#125;</span>) &#123; <span class=\"hljs-comment\">//不要忘记&#123;&#125;</span><br>  <span class=\"hljs-comment\">// 在这里 person 和 size 是可访问的</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>P.S 渲染列表的时候要记得给每一个列表一个key</strong></p>\n<h2 id=\"关于组件的纯粹：\"><a href=\"#关于组件的纯粹：\" class=\"headerlink\" title=\"关于组件的纯粹：\"></a>关于组件的纯粹：</h2><ul>\n<li>一个组件必须是纯粹的，就意味着：<ul>\n<li><strong>只负责自己的任务。</strong> 不应更改渲染前存在的任何对象或变量。</li>\n<li><strong>输入相同，则输出相同。</strong> 给定相同的输入，组件应该总是返回相同的 JSX。</li>\n</ul>\n</li>\n<li>渲染随时可能发生，因此组件不应依赖于彼此的渲染顺序。</li>\n<li>你不应该改变组件用于渲染的任何输入。这包括 props、state 和 context。通过setEffect 来更新界面，而不要改变预先存在的对象。</li>\n<li>努力在你返回的 JSX 中表达你的组件逻辑。当你需要“改变事物”时，你通常希望在事件处理程序中进行。作为最后的手段，你可以使用 useEffect。</li>\n<li>编写纯函数需要一些练习，但它充分释放了 React 范式的能力。<h2 id=\"响应事件\"><a href=\"#响应事件\" class=\"headerlink\" title=\"响应事件\"></a>响应事件</h2><h3 id=\"添加响应事件：\"><a href=\"#添加响应事件：\" class=\"headerlink\" title=\"添加响应事件：\"></a>添加响应事件：</h3>如需添加一个事件处理函数，你需要先定义一个函数，然后 <a href=\"https://react.docschina.org/learn/passing-props-to-a-component\">将其作为 prop 传入</a> 合适的 JSX 标签。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Button</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span></span><br><span class=\"language-xml\">      未绑定任何事件</span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n按照如下三个步骤，即可让它在用户点击时显示消息：</li>\n</ul>\n<ol>\n<li>在 Button 组件 <em>内部</em> 声明一个名为 handleClick 的函数。</li>\n<li>实现函数内部的逻辑（使用 alert 来显示消息）。</li>\n<li>添加 onClick={handleClick} 到 <button> JSX 中。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Button</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleClick</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;你点击了我！&#x27;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">&#123;handleClick&#125;</span>&gt;</span></span><br><span class=\"language-xml\">      点我</span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>按照惯例，通常将事件处理程序命名为 handle，后接事件名。你会经常看到 onClick={handleClick}，onMouseEnter={handleMouseEnter} 等。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"阻止事件传播：\"><a href=\"#阻止事件传播：\" class=\"headerlink\" title=\"阻止事件传播：\"></a>阻止事件传播：</h3><p>如果你想阻止一个事件到达父组件，你需要像下面 Button 组件那样调用 e.stopPropagation() </p>\n<h3 id=\"阻止默认事件\"><a href=\"#阻止默认事件\" class=\"headerlink\" title=\"阻止默认事件\"></a>阻止默认事件</h3><p>你可以调用事件对象中的 e.preventDefault() 来阻止这种情况发生</p>\n<h3 id=\"摘要：\"><a href=\"#摘要：\" class=\"headerlink\" title=\"摘要：\"></a>摘要：</h3><ul>\n<li><p>你可以通过将函数作为 prop 传递给元素如 <button> 来处理事件。</p>\n</li>\n<li><p>必须传递事件处理函数，<strong>而非函数调用！</strong> onClick={handleClick} ，不是 onClick={handleClick()}。</p>\n</li>\n<li><p>你可以单独或者内联定义事件处理函数。</p>\n</li>\n<li><p>事件处理函数在组件内部定义，所以它们可以访问 props。</p>\n</li>\n<li><p>你可以在父组件中定义一个事件处理函数，并将其作为 prop 传递给子组件。</p>\n</li>\n<li><p>你可以根据特定于应用程序的名称定义事件处理函数的 prop。</p>\n</li>\n<li><p>事件会向上传播。通过事件的第一个参数调用 e.stopPropagation() 来防止这种情况。</p>\n</li>\n<li><p>事件可能具有不需要的浏览器默认行为。调用 e.preventDefault() 来阻止这种情况。</p>\n</li>\n<li><p>从子组件显式调用事件处理函数 prop 是事件传播的另一种优秀替代方案。</p>\n<h2 id=\"关于State\"><a href=\"#关于State\" class=\"headerlink\" title=\"关于State\"></a>关于State</h2></li>\n<li><p>当一个组件需要在多次渲染间“记住”某些信息时使用 state 变量。</p>\n</li>\n<li><p>State 变量是通过调用 useState Hook 来声明的。</p>\n</li>\n<li><p>Hook 是以 use 开头的特殊函数。它们能让你 “hook” 到像 state 这样的 React 特性中。</p>\n</li>\n<li><p>Hook 可能会让你想起 import：它们需要在非条件语句中调用。调用 Hook 时，包括 useState，仅在组件或另一个 Hook 的顶层被调用才有效。</p>\n</li>\n<li><p>useState Hook 返回一对值：当前 state 和更新它的函数。</p>\n</li>\n<li><p>你可以拥有多个 state 变量。在内部，React 按顺序匹配它们。</p>\n</li>\n<li><p>State 是组件私有的。如果你在两个地方渲染它，则每个副本都有独属于自己的 state。</p>\n</li>\n</ul>\n<p>使用方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">import</span> &#123; useState &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>; <span class=\"hljs-comment\">//要添加 state 变量，先从文件顶部的 React 中导入 useState</span><br><br><span class=\"hljs-keyword\">const</span> [index, setIndex] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-number\">0</span>); <span class=\"hljs-comment\">//创建state状态</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleClick</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-title function_\">setIndex</span>(index + <span class=\"hljs-number\">1</span>);<br>&#125; <span class=\"hljs-comment\">//改变状态</span><br></code></pre></td></tr></table></figure>\n<p><strong>请记住，必须在条件语句外并且始终以相同的顺序调用 Hook！</strong></p>\n<h2 id=\"渲染：\"><a href=\"#渲染：\" class=\"headerlink\" title=\"渲染：\"></a>渲染：</h2><ul>\n<li>在一个 React 应用中一次屏幕更新都会发生以下三个步骤：<ol>\n<li>触发</li>\n<li>渲染</li>\n<li>提交</li>\n</ol>\n</li>\n<li>您可以使用严格模式去找到组件中的错误</li>\n<li>如果渲染结果与上次一样，那么 React 将不会修改 DOM</li>\n<li>设置 state 只会为 <em>下一次</em> 渲染变更 state 的值</li>\n<li>批处理渲染：<ul>\n<li>设置 state 不会更改现有渲染中的变量，但会请求一次新的渲染。    </li>\n<li>React 会在事件处理函数执行完成之后处理 state 更新。这被称为批处理。</li>\n<li>要在一个事件中多次更新某些 state，你可以使用 setNumber(n =&gt; n + 1) 更新函数。<h2 id=\"更新状态中的对象\"><a href=\"#更新状态中的对象\" class=\"headerlink\" title=\"更新状态中的对象\"></a>更新状态中的对象</h2>State 可以保存任何类型的 JavaScript 值，包括对象。但是你不应该直接改变你在 React 状态下持有的对象。相反，当你想更新一个对象时，你需要创建一个新对象（或复制一个现有对象），然后设置状态以使用该副本。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">onPointerMove=&#123;<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>  position.<span class=\"hljs-property\">x</span> = e.<span class=\"hljs-property\">clientX</span>;<br>  position.<span class=\"hljs-property\">y</span> = e.<span class=\"hljs-property\">clientY</span>;<br>&#125;&#125; <span class=\"hljs-comment\">//错误示范</span><br><br><br>onPointerMove=&#123;<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>  <span class=\"hljs-title function_\">setPosition</span>(&#123;<br>    <span class=\"hljs-attr\">x</span>: e.<span class=\"hljs-property\">clientX</span>,<br>    <span class=\"hljs-attr\">y</span>: e.<span class=\"hljs-property\">clientY</span><br>  &#125;);<br>&#125;&#125;<span class=\"hljs-comment\">//应该这样</span><br></code></pre></td></tr></table></figure>\n你也可以使用<code>...</code>对象扩展语法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">setPerson</span>(&#123;<br>  ...person, <span class=\"hljs-comment\">// Copy the old fields</span><br>  <span class=\"hljs-attr\">firstName</span>: e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">value</span> <span class=\"hljs-comment\">// But override this one</span><br>&#125;);<br></code></pre></td></tr></table></figure>\n但一碰到嵌套的对象，复制一个新对象就显得非常麻烦<br>所以我们可以使用<code>Immer</code>写更简洁的更新<br>步骤：</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>运行 npm install use-immer 将 Immer 添加为依赖项</li>\n<li>然后将 import { useState } from ‘react’ 替换为 import { useImmer } from ‘use-immer’</li>\n<li>将const [] = useState() 变成 const [] = useImmer() </li>\n<li>再使用update(draft=&gt;{draft.name = xxx}) 进行修改</li>\n</ol>\n<p><strong>摘要</strong>：</p>\n<ul>\n<li>Treat all state in React as immutable.<br>将 React 中的所有状态视为不可变的。</li>\n<li>When you store objects in state, mutating them will not trigger renders and will change the state in previous render “snapshots”.<br>当您将对象存储在状态中时，改变它们不会触发渲染，并且会更改先前渲染“快照”中的状态。</li>\n<li>Instead of mutating an object, create a <em>new</em> version of it, and trigger a re-render by setting state to it.<br>与其改变对象，不如创建它的新版本，并通过为其设置状态来触发重新渲染。</li>\n<li>You can use the {…obj, something: ‘newValue’} object spread syntax to create copies of objects.<br>您可以使用 {…obj, something: ‘newValue’} 对象传播语法来创建对象的副本。</li>\n<li>Spread syntax is shallow: it only copies one level deep.<br>传播语法很浅：它只复制一层深。</li>\n<li>To update a nested object, you need to create copies all the way up from the place you’re updating.<br>要更新嵌套对象，您需要从要更新的地方一直向上创建副本。</li>\n<li>To reduce repetitive copying code, use Immer.<br>要减少重复复制代码，请使用 Immer。<h2 id=\"更新数组：\"><a href=\"#更新数组：\" class=\"headerlink\" title=\"更新数组：\"></a>更新数组：</h2>更新数组和对象一样，需要复制再修改<br>善于利用map，fliter，slice等数组方法<br>例子：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleIncreaseClick</span>(<span class=\"hljs-params\">productId</span>) &#123;<br>    <span class=\"hljs-title function_\">setProducts</span>(products.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">product</span>=&gt;</span>&#123;<br>      <span class=\"hljs-keyword\">if</span>(productId===product.<span class=\"hljs-property\">id</span>)&#123;<br>        <span class=\"hljs-keyword\">return</span>&#123;<br>          ...product,<br>          count : product.<span class=\"hljs-property\">count</span>+<span class=\"hljs-number\">1</span><br>        &#125;<br>      &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> product<br>      &#125;<br>    &#125;))<br>  &#125; <span class=\"hljs-comment\">//id+1</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>React 允许你创建组件，<strong>应用程序的可复用 UI 元素。</strong></li>\n<li>在 React 应用程序中，每一个 UI 模块都是一个组件。</li>\n<li>React 是常规的 JavaScript 函数，除了：<ol>\n<li>它们的名字总是以大写字母开头。</li>\n<li>它们返回 JSX 标签。</li>\n</ol>\n</li>\n</ul>\n<p>例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Profile</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/MK3eW3As.jpg&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Katherine Johnson&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">    /&gt;</span></span><br>  );<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Gallery</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span>&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>了不起的科学家<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Profile</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span></span><br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"JSX规则：\"><a href=\"#JSX规则：\" class=\"headerlink\" title=\"JSX规则：\"></a>JSX规则：</h2><ol>\n<li><p>只能返回一个根元素：一个组件中含有多个标签，得用一个父元素将他们包裹起来，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>海蒂·拉玛的代办事项<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">    &gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>    ...<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--或者你可以选择用&lt;&gt;&lt;/&gt;  --&gt;</span><br><span class=\"hljs-tag\">&lt;&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>海蒂·拉玛的代办事项<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">  &gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>    ...<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>标签必须闭合：如img等自闭合标签必须写成<img/></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">   /&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>发明一种新式交通信号灯<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>排练一个电影场景<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span>改进频谱技术<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>使用驼峰式命名给<del>所有</del>大部分属性命名：因为JSX语法底层还是转化为JS代码，所以命名不允许出现-以及class，得用驼峰式命名和className代</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://i.imgur.com/yXOvdOSs.jpg&quot;</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Hedy Lamarr&quot;</span> </span><br><span class=\"hljs-tag\">  <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;photo&quot;</span></span><br><span class=\"hljs-tag\">/&gt;</span><br></code></pre></td></tr></table></figure></li>\n<li><p>{}内可以使用JS变量，JS函数以及JS对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//函数</span><br><span class=\"hljs-keyword\">const</span> today = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">formatDate</span>(<span class=\"hljs-params\">date</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Intl</span>.<span class=\"hljs-title class_\">DateTimeFormat</span>(<br>    <span class=\"hljs-string\">&#x27;en-US&#x27;</span>,<br>    &#123; <span class=\"hljs-attr\">weekday</span>: <span class=\"hljs-string\">&#x27;long&#x27;</span> &#125;<br>  ).<span class=\"hljs-title function_\">format</span>(date);<br>&#125;<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TodoList</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>To Do List for &#123;formatDate(today)&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TodoList</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">&#x27;Gregorio Y. Zara&#x27;</span>;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>&#123;name&#125;&#x27;s To Do List<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span><br>  );<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>JSX总结：</p>\n</li>\n</ol>\n<ul>\n<li>JSX 引号内的值会作为字符串传递给属性。</li>\n<li>大括号让你可以将 JavaScript 的逻辑和变量带入到标签中。</li>\n<li>它们会在 JSX 标签中的内容区域或紧随属性的 = 后起作用。</li>\n<li> 并不是什么特殊的语法：它只是包在 JSX 大括号内的 JavaScript 对象\n<h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2>props是在父组件和子组件中传递的内容，好比JS中传入函数的参数，父组件也可以给子组件传递参数<br>第一步：将props传递给子组件<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Profile</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Avatar</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">person</span>=<span class=\"hljs-string\">&#123;&#123;</span> <span class=\"hljs-attr\">name:</span> &#x27;<span class=\"hljs-attr\">Lin</span> <span class=\"hljs-attr\">Lanying</span>&#x27;, <span class=\"hljs-attr\">imageId:</span> &#x27;<span class=\"hljs-attr\">1bX5QH6</span>&#x27; &#125;&#125;</span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">      <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">&#123;100&#125;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">    /&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n第二步：在子组件中读取props<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Avatar</span>(<span class=\"hljs-params\">&#123; person, size &#125;</span>) &#123; <span class=\"hljs-comment\">//不要忘记&#123;&#125;</span><br>  <span class=\"hljs-comment\">// 在这里 person 和 size 是可访问的</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>P.S 渲染列表的时候要记得给每一个列表一个key</strong></p>\n<h2 id=\"关于组件的纯粹：\"><a href=\"#关于组件的纯粹：\" class=\"headerlink\" title=\"关于组件的纯粹：\"></a>关于组件的纯粹：</h2><ul>\n<li>一个组件必须是纯粹的，就意味着：<ul>\n<li><strong>只负责自己的任务。</strong> 不应更改渲染前存在的任何对象或变量。</li>\n<li><strong>输入相同，则输出相同。</strong> 给定相同的输入，组件应该总是返回相同的 JSX。</li>\n</ul>\n</li>\n<li>渲染随时可能发生，因此组件不应依赖于彼此的渲染顺序。</li>\n<li>你不应该改变组件用于渲染的任何输入。这包括 props、state 和 context。通过setEffect 来更新界面，而不要改变预先存在的对象。</li>\n<li>努力在你返回的 JSX 中表达你的组件逻辑。当你需要“改变事物”时，你通常希望在事件处理程序中进行。作为最后的手段，你可以使用 useEffect。</li>\n<li>编写纯函数需要一些练习，但它充分释放了 React 范式的能力。<h2 id=\"响应事件\"><a href=\"#响应事件\" class=\"headerlink\" title=\"响应事件\"></a>响应事件</h2><h3 id=\"添加响应事件：\"><a href=\"#添加响应事件：\" class=\"headerlink\" title=\"添加响应事件：\"></a>添加响应事件：</h3>如需添加一个事件处理函数，你需要先定义一个函数，然后 <a href=\"https://react.docschina.org/learn/passing-props-to-a-component\">将其作为 prop 传入</a> 合适的 JSX 标签。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Button</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span></span><br><span class=\"language-xml\">      未绑定任何事件</span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n按照如下三个步骤，即可让它在用户点击时显示消息：</li>\n</ul>\n<ol>\n<li>在 Button 组件 <em>内部</em> 声明一个名为 handleClick 的函数。</li>\n<li>实现函数内部的逻辑（使用 alert 来显示消息）。</li>\n<li>添加 onClick={handleClick} 到 <button> JSX 中。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Button</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleClick</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;你点击了我！&#x27;</span>);<br>  &#125;<br><br>  <span class=\"hljs-keyword\">return</span> (<br>    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">&#123;handleClick&#125;</span>&gt;</span></span><br><span class=\"language-xml\">      点我</span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>按照惯例，通常将事件处理程序命名为 handle，后接事件名。你会经常看到 onClick={handleClick}，onMouseEnter={handleMouseEnter} 等。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"阻止事件传播：\"><a href=\"#阻止事件传播：\" class=\"headerlink\" title=\"阻止事件传播：\"></a>阻止事件传播：</h3><p>如果你想阻止一个事件到达父组件，你需要像下面 Button 组件那样调用 e.stopPropagation() </p>\n<h3 id=\"阻止默认事件\"><a href=\"#阻止默认事件\" class=\"headerlink\" title=\"阻止默认事件\"></a>阻止默认事件</h3><p>你可以调用事件对象中的 e.preventDefault() 来阻止这种情况发生</p>\n<h3 id=\"摘要：\"><a href=\"#摘要：\" class=\"headerlink\" title=\"摘要：\"></a>摘要：</h3><ul>\n<li><p>你可以通过将函数作为 prop 传递给元素如 <button> 来处理事件。</p>\n</li>\n<li><p>必须传递事件处理函数，<strong>而非函数调用！</strong> onClick={handleClick} ，不是 onClick={handleClick()}。</p>\n</li>\n<li><p>你可以单独或者内联定义事件处理函数。</p>\n</li>\n<li><p>事件处理函数在组件内部定义，所以它们可以访问 props。</p>\n</li>\n<li><p>你可以在父组件中定义一个事件处理函数，并将其作为 prop 传递给子组件。</p>\n</li>\n<li><p>你可以根据特定于应用程序的名称定义事件处理函数的 prop。</p>\n</li>\n<li><p>事件会向上传播。通过事件的第一个参数调用 e.stopPropagation() 来防止这种情况。</p>\n</li>\n<li><p>事件可能具有不需要的浏览器默认行为。调用 e.preventDefault() 来阻止这种情况。</p>\n</li>\n<li><p>从子组件显式调用事件处理函数 prop 是事件传播的另一种优秀替代方案。</p>\n<h2 id=\"关于State\"><a href=\"#关于State\" class=\"headerlink\" title=\"关于State\"></a>关于State</h2></li>\n<li><p>当一个组件需要在多次渲染间“记住”某些信息时使用 state 变量。</p>\n</li>\n<li><p>State 变量是通过调用 useState Hook 来声明的。</p>\n</li>\n<li><p>Hook 是以 use 开头的特殊函数。它们能让你 “hook” 到像 state 这样的 React 特性中。</p>\n</li>\n<li><p>Hook 可能会让你想起 import：它们需要在非条件语句中调用。调用 Hook 时，包括 useState，仅在组件或另一个 Hook 的顶层被调用才有效。</p>\n</li>\n<li><p>useState Hook 返回一对值：当前 state 和更新它的函数。</p>\n</li>\n<li><p>你可以拥有多个 state 变量。在内部，React 按顺序匹配它们。</p>\n</li>\n<li><p>State 是组件私有的。如果你在两个地方渲染它，则每个副本都有独属于自己的 state。</p>\n</li>\n</ul>\n<p>使用方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">import</span> &#123; useState &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>; <span class=\"hljs-comment\">//要添加 state 变量，先从文件顶部的 React 中导入 useState</span><br><br><span class=\"hljs-keyword\">const</span> [index, setIndex] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-number\">0</span>); <span class=\"hljs-comment\">//创建state状态</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleClick</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-title function_\">setIndex</span>(index + <span class=\"hljs-number\">1</span>);<br>&#125; <span class=\"hljs-comment\">//改变状态</span><br></code></pre></td></tr></table></figure>\n<p><strong>请记住，必须在条件语句外并且始终以相同的顺序调用 Hook！</strong></p>\n<h2 id=\"渲染：\"><a href=\"#渲染：\" class=\"headerlink\" title=\"渲染：\"></a>渲染：</h2><ul>\n<li>在一个 React 应用中一次屏幕更新都会发生以下三个步骤：<ol>\n<li>触发</li>\n<li>渲染</li>\n<li>提交</li>\n</ol>\n</li>\n<li>您可以使用严格模式去找到组件中的错误</li>\n<li>如果渲染结果与上次一样，那么 React 将不会修改 DOM</li>\n<li>设置 state 只会为 <em>下一次</em> 渲染变更 state 的值</li>\n<li>批处理渲染：<ul>\n<li>设置 state 不会更改现有渲染中的变量，但会请求一次新的渲染。    </li>\n<li>React 会在事件处理函数执行完成之后处理 state 更新。这被称为批处理。</li>\n<li>要在一个事件中多次更新某些 state，你可以使用 setNumber(n =&gt; n + 1) 更新函数。<h2 id=\"更新状态中的对象\"><a href=\"#更新状态中的对象\" class=\"headerlink\" title=\"更新状态中的对象\"></a>更新状态中的对象</h2>State 可以保存任何类型的 JavaScript 值，包括对象。但是你不应该直接改变你在 React 状态下持有的对象。相反，当你想更新一个对象时，你需要创建一个新对象（或复制一个现有对象），然后设置状态以使用该副本。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">onPointerMove=&#123;<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>  position.<span class=\"hljs-property\">x</span> = e.<span class=\"hljs-property\">clientX</span>;<br>  position.<span class=\"hljs-property\">y</span> = e.<span class=\"hljs-property\">clientY</span>;<br>&#125;&#125; <span class=\"hljs-comment\">//错误示范</span><br><br><br>onPointerMove=&#123;<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>  <span class=\"hljs-title function_\">setPosition</span>(&#123;<br>    <span class=\"hljs-attr\">x</span>: e.<span class=\"hljs-property\">clientX</span>,<br>    <span class=\"hljs-attr\">y</span>: e.<span class=\"hljs-property\">clientY</span><br>  &#125;);<br>&#125;&#125;<span class=\"hljs-comment\">//应该这样</span><br></code></pre></td></tr></table></figure>\n你也可以使用<code>...</code>对象扩展语法<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">setPerson</span>(&#123;<br>  ...person, <span class=\"hljs-comment\">// Copy the old fields</span><br>  <span class=\"hljs-attr\">firstName</span>: e.<span class=\"hljs-property\">target</span>.<span class=\"hljs-property\">value</span> <span class=\"hljs-comment\">// But override this one</span><br>&#125;);<br></code></pre></td></tr></table></figure>\n但一碰到嵌套的对象，复制一个新对象就显得非常麻烦<br>所以我们可以使用<code>Immer</code>写更简洁的更新<br>步骤：</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>运行 npm install use-immer 将 Immer 添加为依赖项</li>\n<li>然后将 import { useState } from ‘react’ 替换为 import { useImmer } from ‘use-immer’</li>\n<li>将const [] = useState() 变成 const [] = useImmer() </li>\n<li>再使用update(draft=&gt;{draft.name = xxx}) 进行修改</li>\n</ol>\n<p><strong>摘要</strong>：</p>\n<ul>\n<li>Treat all state in React as immutable.<br>将 React 中的所有状态视为不可变的。</li>\n<li>When you store objects in state, mutating them will not trigger renders and will change the state in previous render “snapshots”.<br>当您将对象存储在状态中时，改变它们不会触发渲染，并且会更改先前渲染“快照”中的状态。</li>\n<li>Instead of mutating an object, create a <em>new</em> version of it, and trigger a re-render by setting state to it.<br>与其改变对象，不如创建它的新版本，并通过为其设置状态来触发重新渲染。</li>\n<li>You can use the {…obj, something: ‘newValue’} object spread syntax to create copies of objects.<br>您可以使用 {…obj, something: ‘newValue’} 对象传播语法来创建对象的副本。</li>\n<li>Spread syntax is shallow: it only copies one level deep.<br>传播语法很浅：它只复制一层深。</li>\n<li>To update a nested object, you need to create copies all the way up from the place you’re updating.<br>要更新嵌套对象，您需要从要更新的地方一直向上创建副本。</li>\n<li>To reduce repetitive copying code, use Immer.<br>要减少重复复制代码，请使用 Immer。<h2 id=\"更新数组：\"><a href=\"#更新数组：\" class=\"headerlink\" title=\"更新数组：\"></a>更新数组：</h2>更新数组和对象一样，需要复制再修改<br>善于利用map，fliter，slice等数组方法<br>例子：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleIncreaseClick</span>(<span class=\"hljs-params\">productId</span>) &#123;<br>    <span class=\"hljs-title function_\">setProducts</span>(products.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">product</span>=&gt;</span>&#123;<br>      <span class=\"hljs-keyword\">if</span>(productId===product.<span class=\"hljs-property\">id</span>)&#123;<br>        <span class=\"hljs-keyword\">return</span>&#123;<br>          ...product,<br>          count : product.<span class=\"hljs-property\">count</span>+<span class=\"hljs-number\">1</span><br>        &#125;<br>      &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> product<br>      &#125;<br>    &#125;))<br>  &#125; <span class=\"hljs-comment\">//id+1</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clgcf7ezm000084mpeadzds45","tag_id":"clgcfira100002smpb3f17ggs","_id":"clgcfira200012smp1mv80ioc"}],"Tag":[{"name":"front-end","_id":"clgcfira100002smpb3f17ggs"}]}}